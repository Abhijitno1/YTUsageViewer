@using PagedList.Mvc
@using YTUsageViewer.Models
@model PagedList.IPagedList<Contact>

@{
    ViewBag.Title = "Contacts Browser";
    //var firstName = Html.DisplayNameFor(model => model.FirstName).ToHtmlString();
    //var lastName = @Html.DisplayNameFor(model => model.LastName).ToHtmlString();
    //var email = @Html.DisplayNameFor(model => model.Email).ToHtmlString();
    var firstName = "First Name";
    var lastName = "Last Name";
    var email = "Email";
    var newSortDir = ViewBag.SortDir == "ASC" ? "DESC" : "ASC";
}

@helper getSortDirIcon(string sortOrderCheck)
{
    switch (ViewBag.SortDir)
    {
        case null:
            @String.Empty;
            break;
        case "ASC":
            @(ViewBag.SortOrder == sortOrderCheck ? "glyphicon-sort-by-attributes" : string.Empty);
            break;
        case "DESC":
            @(ViewBag.SortOrder == sortOrderCheck ? "glyphicon-sort-by-attributes-alt" : string.Empty);
            break;
    }
}

<h2>@ViewBag.Title</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "Contacts", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
        @Html.Hidden("sortOrder", ViewBag.SortOrder as string)
        @Html.Hidden("sortDir", ViewBag.SortDir as string)
        @Html.Hidden("pageNumber", ViewBag.CurrentPage as string)
        <input type="submit" value="Search" />
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink(firstName, "Index", new { sortOrder = "firstName", sortDir = newSortDir, searchString = ViewBag.CurrentFilter, pageNumber = ViewBag.CurrentPage })
            <span class="glyphicon @getSortDirIcon("firstName") pull-right"></span>
        </th>
        <th>
            @Html.ActionLink(lastName, "Index", new { sortOrder = "lastName", sortDir = newSortDir, searchString = ViewBag.CurrentFilter, pageNumber = ViewBag.CurrentPage })
            <span class="glyphicon @getSortDirIcon("lastName") pull-right"></span>
        </th>
        <th>
            Mobile Phone
        </th>
        <th>
            Work Phone
        </th>
        <th>
            Home Phone
        </th>
        <th>
            Preferred Phone
        </th>
        <th>
            @Html.ActionLink(email, "Index", new { sortOrder = "email", sortDir = newSortDir, searchString = ViewBag.CurrentFilter, pageNumber = ViewBag.CurrentPage })
            <span class="glyphicon @getSortDirIcon("email") pull-right"></span>
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
                @if (!string.IsNullOrWhiteSpace(item.LastName))
                {
                    <a class="pull-right" href="#" data-toggle="popover" data-trigger="focus" data-content="@item.LastName"><span class="glyphicon glyphicon-zoom-in"></span></a>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneMobile)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneWork)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneHome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PreferredPhone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }

</table>
@*PAGED LIST*@
<div class="pagedList">
    @Html.PagedListPager(Model, pageNumber => Url.Action("Index", new
    {
        pageNumber,
        searchString = ViewBag.CurrentFilter,
        sortOrder = ViewBag.SortOrder,
        sortDir = ViewBag.SortDir
    }))
</div>


@section scripts {
    <script>
        $(document).ready(function () {
            //https://www.w3schools.com/bootstrap/bootstrap_popover.asp
            $(document).ready(function () {
                $('[data-toggle="popover"]').popover();
            });
        });
    </script>
}
