@using YTUsageViewer.Helpers;
@using YTUsageViewer.ViewModels
@model PagedList.IPagedList<Video>

@functions
{
    private string newSortDir
    {
        get { return ViewBag.SortDir == "ASC" ? "DESC" : "ASC"; }
    }
    public RouteValueDictionary GenerateRootValueDictionaryForSort(string sortOrder)
    {
        return new RouteValueDictionary {
            {"searchTitle", ViewBag.CurrentFilter.Title },
            {"searchChannel", ViewBag.CurrentFilter.ChannelId },
            {"pageNumber", ViewBag.CurrentPage },
            {"sortOrder", sortOrder },
            {"sortDir", newSortDir }
        };
    }
}

@{
    ViewBag.Title = "Videos List";
    Layout = "~/Views/Shared/_YTLayout.cshtml";
    ViewBag.CurrentYtMenu = YTBrowserMenu.Videos;
    var actionName = "Videos";
}

<h2>@ViewBag.Title</h2>
@using (Html.BeginForm(actionName, "YTBrowser", FormMethod.Get, new { @class = "form-inline" }))
{
    <div class="panel panel-default">
        <div class="panel-body" style="padding:0 15px;">
            <div class="row form-row">
                <div class="form-group">
                    <label for="searchTitle">Find by name</label>
                    @Html.TextBox("searchTitle", ViewBag.CurrentFilter.VideoName as string, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label for="cboChannel">Channel</label>
                    @Html.DropDownList("searchChannel", ViewBag.ChannelsList as SelectList, new { @class = "form-control" })
                </div>
                @*<div class="form-group checkbox">
                        <label>@Html.CheckBox("chkIsRemoved") Is Removed</label>
                    </div>*@
                @Html.Hidden("sortOrder", ViewBag.SortOrder as string)
                @Html.Hidden("sortDir", ViewBag.SortDir as string)
                @Html.Hidden("pageNumber", ViewBag.CurrentPage as string)
                <input type="submit" name="Search" value="Search" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div id="resultItems">
    <table class="table">
        <tr>
            <th>
                @Html.GridColumnHeader("Title", actionName, "title", newSortDir)
            </th>
            <th>
                @Html.GridColumnHeader("Description", actionName, "description", newSortDir)
            </th>
            <th>
                @Html.GridColumnHeader("Channel Name", actionName, "channelName", newSortDir)
            </th>
            <th>
                @Html.GridColumnHeader("Duration", actionName, "duration", newSortDir)
            </th>
            <th>
                @Html.GridColumnHeader("Published At", actionName, "publishedAt", newSortDir)
            </th>
            <th>
                @Html.GridColumnHeader("Inserted Date", actionName, "insertedDate", newSortDir)
            </th>
            <th>
                @Html.GridColumnHeader("Is Deleted", actionName, "isDeleted", newSortDir)
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr rowKey="@item.CharId">
                <td>
                    <a href="https://www.youtube.com/watch?v=@item.CharId" target="_blank">@item.Title</a>
                </td>
                <td>
                    @Html.TruncatedGridColumn(@item.Description)
                </td>
                <td>
                    <a href="https://www.youtube.com/channel/@item.ChannelId" target="_blank">@item.ChannelName</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DurationSpan)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PublishedAt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InsertedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsDeleted)
                </td>
            </tr>
        }

    </table>
</div>
@*PAGED LIST*@
<div class="pagedList">
    @Html.PagedListPager(Model, pageNumber => Url.Action(actionName, new
{
    pageNumber,
    searchTitle = ViewBag.CurrentFilter.VideoName,
    searchChannel = ViewBag.CurrentFilter.ChannelId,
    sortOrder = ViewBag.SortOrder,
    sortDir = ViewBag.SortDir
}))
</div>

<div style="display:none;">
    <div class="btn-row-popup-menu-head">
        Description
        <a class="btn-popover-close pull-right" href="#">
            &times;
        </a>
    </div>
</div>

@section scripts {
    <script>
        //Below function will be executed on View Load
        $(document).ready(function () {
            //https://www.w3schools.com/bootstrap/bootstrap_popover.asp

            $('[data-toggle="popover"]').popover({
                placement: 'auto left',
                html: true,
                title: function () { return $('.btn-row-popup-menu-head').html() },
                content: ''
            });
        });

        $('[data-toggle="popover"]').on('shown.bs.popover', function () {
            var popoverWindow = $(this);
            $('.btn-popover-close').click(function () {
                popoverWindow.popover('hide');
            });
        });
    </script>
}