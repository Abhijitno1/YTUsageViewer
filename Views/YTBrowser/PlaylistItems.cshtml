@using YTUsageViewer.Helpers
@using YTUsageViewer.ViewModels
@model PagedList.IPagedList<PlaylistItem>

@{
    ViewBag.Title = "Playlist Items for \"" + ViewBag.MainFilter + "\"";
    Layout = "~/Views/Shared/_YTLayout.cshtml";
    ViewBag.CurrentYtMenu = YTBrowserMenu.Playlists;
    var searchMode = ViewBag.CurrentFilter.SearchMode as string;
}

@using (Html.BeginForm("PlaylistItems", "YTBrowser", FormMethod.Post, new { @class = "form-inline" }))
{
    <div class="panel panel-default">
        <div class="panel-body" style="padding:0 15px;">
            <div class="row form-row">
                <label for="Title" class="col-sm-2">Find by name</label>
                <div class="col-sm-4">
                    @Html.TextBox("ItemName", ViewBag.CurrentFilter.ItemName as string, new { @class = "form-control" })
                </div>
                @if (searchMode == PlaylistItemSearchMode.ForPlaylist)
                {
                    <label for="ChannelId" class="col-sm-1">Channel</label>
                    <div class="col-sm-4">
                        @Html.DropDownList("ChannelId", ViewBag.ChannelsList as SelectList, new { @class = "form-control" })
                        @Html.Hidden("PlaylistId", ViewBag.CurrentFilter.PlaylistId as string)
                    </div>
                }
                else if (searchMode == PlaylistItemSearchMode.ForChannel)
                {
                    <label for="PlaylistId" class="col-sm-1">Playlist</label>
                    <div class="col-sm-4">
                        @Html.DropDownList("PlaylistId", ViewBag.PlaylistsList as SelectList, new { @class = "form-control" })
                        @Html.Hidden("ChannelId", ViewBag.CurrentFilter.ChannelId as string)
                    </div>
                }
                @*
                <div class="form-group checkbox">
                    <label>@Html.CheckBox("chkIsRemoved") Is Removed</label>
                </div>
                *@
                <div class="col-sm-1">
                    @Html.Partial("_SortNPageInputs")
                    @Html.Hidden("SearchMode", searchMode)
                    <input type="submit" name="Search" value="Search" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}
<div id="resultItems">
    <table class="table table-striped">
        <tr>
            <th>
                @Html.GridColumnHeader("Video Title", "title")
            </th>
            <th>
                @Html.GridColumnHeader("Published At", "publishedAt")
            </th>
            <th>
                @if (searchMode.Equals(PlaylistItemSearchMode.ForPlaylist))
                {
                    @Html.GridColumnHeader("Video Owner Channel", "videoOwnerChannel")
                }
                else if (searchMode.Equals(PlaylistItemSearchMode.ForChannel))
                {
                    @Html.GridColumnHeader("Playlist", "playlist")
                }
            </th>
            <th>
                @Html.GridColumnHeader("Inserted Date", "insertedDate")
            </th>
            <th>
                @Html.GridColumnHeader("Is Removed", "isRemoved")
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr rowKey="@item.CharId">
                <td>
                    <a href="https://www.youtube.com/watch?v=@item.VideoId" target="_blank">@item.Title</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PublishedAt)
                </td>
                <td>
                    @if (searchMode.Equals(PlaylistItemSearchMode.ForPlaylist))
                    {
                        <a href="https://www.youtube.com/channel/@item.VideoOwnerChannelId" target="_blank">@item.VideoOwnerChannelName</a>
                    }
                    else if (searchMode.Equals(PlaylistItemSearchMode.ForChannel))
                    {
                        @item.PlaylistName
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InsertedDate)
                </td>
                <td>
                    @(item.IsRemoved == "Y"? "Yes" : "No")
                </td>
            </tr>
        }
    </table>
</div>
@*PAGED LIST*@
<div class="pagedList">
    @Html.JSPagedListPager(Model)
</div>

@section scripts {
    <script>
    @{
        string prevPageTitle = "";
        if (searchMode.Equals(PlaylistItemSearchMode.ForPlaylist))
        {
            @:var playlistViewUrl = '@Url.Action("Playlists")';
            prevPageTitle = "Playlists";
        }
        else if (searchMode.Equals(PlaylistItemSearchMode.ForChannel))
        {
            @:var playlistViewUrl = '@Url.Action("Channels")';
            prevPageTitle = "Channels";
        }
        else if (searchMode.Equals(PlaylistItemSearchMode.ForChannelScroll))
        {
            @:var playlistViewUrl = '@Url.Action("ChannelsScroll")';
            prevPageTitle = "Channels";
        }
        <text>
        $(function () {
            var btnBack = $('<button type="button" class="btn btn-info" id="btnBack" title="Back to @prevPageTitle">\
                                    <i class="glyphicon glyphicon-backward"></i>\
                            </button>');
            $('#pageToolbar').append(btnBack);
            btnBack.click(function () {
                $(location).attr('href', playlistViewUrl);
            });

            @if (searchMode.Equals(PlaylistItemSearchMode.ForPlaylist))
            {
                @:$("[name='ChannelId']").select2();
            }
            else if (searchMode.Equals(PlaylistItemSearchMode.ForChannel)
                || searchMode.Equals(PlaylistItemSearchMode.ForChannelScroll))
            {
                @:$("[name='PlaylistId']").select2();
            }

        });

        $('#btnExport').click(function () {
            alert("Exporting Playlist Items (WIP)");
        });
        </text>
    }
    </script>
}

