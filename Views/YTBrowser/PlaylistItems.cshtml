@using YTUsageViewer.Helpers
@using YTUsageViewer.ViewModels
@model PagedList.IPagedList<PlaylistItem>

@functions
{
    private string newSortDir
    {
        get { return ViewBag.SortDir == "ASC" ? "DESC" : "ASC"; }
    }
    public RouteValueDictionary GenerateRootValueDictionaryForSort(string sortOrder)
    {
        return new RouteValueDictionary {
            {"playlistId", Request.QueryString["playlistId"] },
            {"searchTitle", ViewBag.CurrentFilter.Title },
            {"searchChannel", ViewBag.CurrentFilter.ChannelId },
            {"pageNumber", ViewBag.CurrentPage },
            {"sortOrder", sortOrder },
            {"sortDir", newSortDir }
        };
    }
}

@{
    ViewBag.Title = "Playlist Items";
    Layout = "~/Views/Shared/_YTLayout.cshtml";
    ViewBag.CurrentYtMenu = YTBrowserMenu.Playlists;
    var actionName = "PlaylistItems";
    var playlistId = Request.QueryString["playlistId"];
}

<h2>@ViewBag.Title for @ViewBag.PlaylistName</h2>
@using (Html.BeginForm(actionName, "YTBrowser", FormMethod.Get, new { @class = "form-inline" }))
{
    <div class="panel panel-default">
        <div class="panel-body" style="padding:0 15px;">
            <div class="row form-row">
                <div class="form-group">
                    <label for="searchTitle">Find by name</label>
                    @Html.TextBox("searchTitle", ViewBag.CurrentFilter.Title as string, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label for="cboChannel">Channel</label>
                    @Html.DropDownList("searchChannel", ViewBag.ChannelsList as SelectList, new { @class = "form-control" })
                </div>
                @*<div class="form-group checkbox">
                    <label>@Html.CheckBox("chkIsRemoved") Is Removed</label>
                </div>*@
                @Html.Hidden("sortOrder", ViewBag.SortOrder as string)
                @Html.Hidden("sortDir", ViewBag.SortDir as string)
                @Html.Hidden("pageNumber", ViewBag.CurrentPage as string)
                @Html.Hidden("playlistId", playlistId)
                <input type="submit" name="Search" value="Search" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div id="resultItems">
    <table class="table">
        <tr>
            <th>
                @Html.GridColumnHeader("Video Title", actionName, GenerateRootValueDictionaryForSort("title"))
            </th>
            <th>
                @Html.GridColumnHeader("Published At", actionName, GenerateRootValueDictionaryForSort("publishedAt"))
            </th>
            <th>
                @Html.GridColumnHeader("Video Owner Channel Id", actionName, GenerateRootValueDictionaryForSort("videoOwnerChannel"))
            </th>
            <th>
                @Html.GridColumnHeader("Inserted Date", actionName, GenerateRootValueDictionaryForSort("insertedDate"))
            </th>
            <th>
                @Html.GridColumnHeader("Is Removed", actionName, GenerateRootValueDictionaryForSort("isRemoved"))
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr rowKey="@item.CharId">
                <td>
                    <a href="https://www.youtube.com/watch?v=@item.VideoId" target="_blank">@item.Title</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PublishedAt)
                </td>
                <td>
                    <a href="https://www.youtube.com/channel/@item.VideoOwnerChannelId" target="_blank">@item.VideoOwnerChannelName</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InsertedDate)
                </td>
                <td>
                    @(item.IsRemoved == "Y"? "Yes" : "No")
                </td>
            </tr>
        }
    </table>
</div>
@*PAGED LIST*@
<div class="pagedList">
    @Html.PagedListPager(Model, pageNumber => Url.Action(actionName, new
{
    pageNumber,
    searchTitle = ViewBag.CurrentFilter.Title,
    searchChannel = ViewBag.CurrentFilter.ChannelId,
    sortOrder = ViewBag.SortOrder,
    sortDir = ViewBag.SortDir,
    playlistId = playlistId
}))
</div>

@section scripts {
    <script>
        $(function () {
            var btnBack = $('<button type="button" class="btn btn-info" id="btnBack" title="Back to Playlists">\
                                <i class="glyphicon glyphicon-backward" ></i>\
                           </button>');
            $('#pageToolbar').append(btnBack);
            btnBack.click(function () {
                var playlistViewUrl = '@Url.Action("Playlists")';
                $(location).attr('href', playlistViewUrl);
            });
        });

        $('#btnExport').click(function () {
            alert("Exporting Playlists (WIP)");
        });
    </script>
}
