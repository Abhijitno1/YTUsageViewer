@using YTUsageViewer.Helpers;
@using YTUsageViewer.ViewModels
@model PagedList.IPagedList<Comment>

@{
    ViewBag.Title = "Comments List";
    Layout = "~/Views/Shared/_YTLayout.cshtml";
    ViewBag.CurrentYtMenu = YTBrowserMenu.Comments;
    var actionName = "Comments";
}

<h2>@ViewBag.Title</h2>
@using (Html.BeginForm(actionName, "YTBrowser", FormMethod.Post))
{
    <div class="panel panel-default">
        <div class="panel-body" style="padding:0 15px;">
            <div class="row form-row">
                <label for="searchComment" class="col-sm-2 col-form-label">Find Comment Containing</label>
                <div class="col-sm-5">
                    @Html.TextBox("searchComment", ViewBag.CurrentFilter.CommentText as string, new {id = "searchComment", @class = "form-control" })
                </div>
                <label for="searchCommentType" class="col-sm-2 col-form-label">Comment Type</label>
                <div class="col-sm-3">
                    @Html.DropDownList("searchCommentType", ViewBag.CommentTypesList as SelectList, new { id = "searchCommentType", @class = "form-control" })
                </div>
            </div>
            <div class="row form-row">
                <label for="searchChannel" class="col-sm-2 col-form-label">Channel</label>
                <div class="col-sm-3">
                    @Html.DropDownList("searchChannel", ViewBag.ChannelsList as SelectList, new {id = "searchChannel", @class = "form-control" })
                </div>
                <label for="searchVideo" class="col-sm-2 col-form-label">Video</label>
                <div class="col-sm-4">
                    @Html.DropDownList("searchVideo", ViewBag.VideosList as SelectList, new {id = "searchVideo", @class = "form-control" })
                </div>
                <div class="col-sm-1">
                    @Html.Hidden("sortOrder", ViewBag.SortOrder as string, new { id= "sortOrder" })
                    @Html.Hidden("sortDir", ViewBag.SortDir as string, new { id= "sortDir" })
                    @Html.Hidden("pageNumber", ViewBag.CurrentPage as string, new { id= "pageNumber" })
                    <input type="submit" name="Search" value="Search" class="btn btn-default" />
                </div>
            </div>
            @*<div class="form-group checkbox">
                <label>@Html.CheckBox("chkIsRemoved") Is Removed</label>
            </div>*@
        </div>
    </div>
}
<div id="resultItems">
    <table class="table">
        <tr>
            <th>
                @Html.GridColumnHeader("Comment Type", "commentType")
            </th>
            <th>
                @Html.GridColumnHeader("Video Name", "videoTitle")
            </th>
            <th>
                @Html.GridColumnHeader("Channel Name", "channelTitle")
            </th>
            <th>
                @Html.GridColumnHeader("Comment Text", "commentText")
            </th>
            <th>
                @Html.GridColumnHeader("Published On", "createdWhen")
            </th>
            @*<th>
                @Html.GridColumnHeader("Inserted Date", actionName, "insertedDate", newSortDir)
            </th>*@
            <th>
                @Html.GridColumnHeader("Is Deleted", "isUnavailable")
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr rowKey="@item.CommentId">
                <td>
                    <a href="@item.CommentUrl" target="_blank">@item.CommentType</a>
                </td>
                <td>
                    <a href="https://www.youtube.com/watch?v=@item.VideoId" target="_blank">@item.VideoTitle</a>
                </td>
                <td>
                    <a href="https://www.youtube.com/channel/@item.ChannelId" target="_blank">@item.ChannelTitle</a>
                </td>
                <td>
                    @Html.TruncatedGridColumn(@item.CommentText)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedWhen)
                </td>
                @*<td>
                    @Html.DisplayFor(modelItem => item.InsertedDate)
                </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.IsUnavailable)
                </td>
            </tr>
        }

    </table>
</div>
@*PAGED LIST*@
<div class="pagedList">
    @Html.PagedListPager(Model, pageNumber => "Javascript: pageGrid(" + pageNumber + ")")
</div>
